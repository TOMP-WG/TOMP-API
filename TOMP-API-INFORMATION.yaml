openapi: 3.1.0
info:
  title: Transport Operator MaaS Provider API
  description: "<h2>Context</h2>
    <p>This API allows technical communication between Transport Operators (TO) and MaaS providers (MP, and other resellers), to fulfill a complete MaaS user journey<br>
    For more information: <a href='https://github.com/TOMP-WG/TOMP-API/wiki/OpenAPI-entry-page'>TOMP-API wiki</a>, and <a href='https://github.com/TOMP-WG/TOMP-API/wiki/OpenAPI-code-convention'>Coding conventions</a>"
  version: "2.0.0"
  contact:
    name: TOMP working group
    url: https://github.com/TOMP-WG/TOMP-API
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"

tags:
  - name: information
    description: MaaS Maturity Level 1 - distibute multimodal travel planning information

paths:
  /collections/products/items:
    get:
      operationId: requestProducts
      summary: "Request the product catalogue, filter on a single parameter or package"
      parameters:
        - name: parameter
          in: query
          description: a single parameter
          schema: 
            $ref: "TOMP-API-CORE.yaml#/components/schemas/parameter"
          style: form
          explode: true
          example: 
            type: SERVICE
            class: FIRST
        - $ref: "TOMP-API-CORE.yaml#/components/parameters/optionalPackageId"
        - $ref: "TOMP-API-CORE.yaml#/components/parameters/acceptLanguage"
        - $ref: "TOMP-API-CORE.yaml#/components/parameters/authorization"
        - $ref: "TOMP-API-CORE.yaml#/components/parameters/receiverId"
        - $ref: "TOMP-API-CORE.yaml#/components/parameters/limit"
        - $ref: "TOMP-API-CORE.yaml#/components/parameters/offset"
        - $ref: "TOMP-API-CORE.yaml#/components/parameters/bbox"                   
      tags:
        - information
      responses:
        "200":
          $ref: "#/components/responses/productsResponse"
        default:
          $ref: "TOMP-API-CORE.yaml#/components/responses/errorResponse"

  /collections/assets/items:
    get:
      operationId: requestAssets
      summary: "Request the assets available for a leg"
      parameters:
        - $ref: "TOMP-API-CORE.yaml#/components/parameters/acceptLanguage"
        - $ref: "TOMP-API-CORE.yaml#/components/parameters/authorization"
        - $ref: "TOMP-API-CORE.yaml#/components/parameters/receiverId"
        - $ref: "TOMP-API-CORE.yaml#/components/parameters/limit"
        - $ref: "TOMP-API-CORE.yaml#/components/parameters/offset"
        - $ref: "TOMP-API-CORE.yaml#/components/parameters/bbox"
        - $ref: "TOMP-API-CORE.yaml#/components/parameters/packageId"
        - $ref: "TOMP-API-CORE.yaml#/components/parameters/legId"
        - $ref: "TOMP-API-CORE.yaml#/components/parameters/optionalProductId"
      tags:
        - information
      responses:
        "200":
          $ref: "#/components/responses/assetsResponse"
        default:
          $ref: "TOMP-API-CORE.yaml#/components/responses/errorResponse"

  /collections/fares/items:
    get:
      operationId: requestFares
      summary: "Request the fare for a specific product, times, OD, a traveller 
        and list of parameterAssignments"
      parameters:
        - $ref: "TOMP-API-CORE.yaml#/components/parameters/acceptLanguage"
        - $ref: "TOMP-API-CORE.yaml#/components/parameters/authorization"
        - $ref: "TOMP-API-CORE.yaml#/components/parameters/receiverId"
        - $ref: "TOMP-API-CORE.yaml#/components/parameters/limit"
        - $ref: "TOMP-API-CORE.yaml#/components/parameters/offset"
        - $ref: "TOMP-API-CORE.yaml#/components/parameters/bbox"
        - $ref: "TOMP-API-CORE.yaml#/components/parameters/productId"
        - $ref: "TOMP-API-CORE.yaml#/components/parameters/from"
        - $ref: "TOMP-API-CORE.yaml#/components/parameters/to"
        - $ref: "TOMP-API-CORE.yaml#/components/parameters/via"
        - $ref: "TOMP-API-CORE.yaml#/components/parameters/start-time"
        - $ref: "TOMP-API-CORE.yaml#/components/parameters/end-time"
        - $ref: "TOMP-API-CORE.yaml#/components/parameters/traveller"
        - $ref: "TOMP-API-CORE.yaml#/components/parameters/parameter"
      tags:
        - information
      responses:
        "200":
          $ref: "#/components/responses/fareResponse"
        default:
          $ref: "TOMP-API-CORE.yaml#/components/responses/errorResponse"

components:
  responses:
    assetsResponse:
      description: a list of assets
      headers:
        Version:
          $ref: "#/components/headers/version"
        Content-Language:
          $ref: "#/components/headers/contentLanguage"
        Expires:
          schema:
            $ref: "#/components/schemas/httpDate"
          required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/assetsResponseBody"

    productsResponse:
      description: a list of products
      headers:
        Version:
          $ref: "#/components/headers/version"
        Content-Language:
          $ref: "#/components/headers/contentLanguage"
        Expires:
          schema:
            $ref: "#/components/schemas/httpDate"
          required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/productsResponseBody"

    fareResponse:
      description: a list of fares for a specific product and usage
      headers:
        Version:
          $ref: "#/components/headers/version"
        Content-Language:
          $ref: "#/components/headers/contentLanguage"
        Expires:
          schema:
            $ref: "#/components/schemas/httpDate"
          required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/fareResponseBody"

  schemas:
    assetsResponseBody:
      description: a list of assets. The main 'properties' field must be of type 'offers' (#/components/schemas/offerProperties),
        each feature-properties field must be of type 'asset'
      $ref: "#/components/schemas/geojson"

    productsResponseBody:
      description: a list of products. The main 'properties' field must be of type 'products'
        each feature-properties field must be of type 'product'. The geometry must represent the
        geographical validity parameter (=area where it can be used)
      $ref: "#/components/schemas/geojson"

    fareResponseBody:
      description: a list of products. The main 'properties' field must be of type 'fares'
        each feature-properties field must be of type 'product'. The 'fare' field is mandatory.
        The geometry must represent the geographical validity parameter (=area where it can be used)
      $ref: "#/components/schemas/geojson"
