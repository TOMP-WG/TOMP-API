openapi: 3.1.0
info:
  title: Transport Operator MaaS Provider API
  description: "<h2>Context</h2>
    <p>This API allows technical communication between Transport Operators (TO) and MaaS providers (MP, and other resellers), to fulfill a complete MaaS user journey<br>
    For more information: <a href='https://github.com/TOMP-WG/TOMP-API/wiki/OpenAPI-entry-page'>TOMP-API wiki</a>, and <a href='https://github.com/TOMP-WG/TOMP-API/wiki/OpenAPI-code-convention'>Coding conventions</a>"
  version: "2.0.0"
  contact:
    name: TOMP working group
    url: https://github.com/TOMP-WG/TOMP-API
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"

tags:
  - name: execute
    description: This part of the API facilitates changing operational parts of the trip, like starting, 
      stopping legs or initiate new legs from a product.
      For modifications of the package (travellers, assignment of assets (seats), ancillaries), 
      use the endpoint specified in the pre-sales module.

paths:
  /processes/{legOperation}-leg/execute:
    post:
      operationId: legOperation
      summary: "Perform an operation on a leg"
      description: This endpoint must be used to alter the state of a LEG, using OPERATION requests.
      parameters:
        - $ref: "TOMP-API-1-CORE.yaml#/components/parameters/acceptLanguage"
        - $ref: "TOMP-API-1-CORE.yaml#/components/parameters/authorization"
        - name: legOperation
          in: query
          description: OPERATION on a specified leg
          required: false
          schema:
            $ref: "#/components/schemas/legOperation"
      security:
        - BearerAuth: []
        - OAuth: []
        - OAuthPKI: []
      tags:
        - execute
      requestBody:
        description: -|
         <h2>Leg operations</h2>
         - START - the `inputs` MUST be a legInput
         - PAUSE - the `inputs` MUST be a legInput
         - RESUME - the `inputs` MUST be a legInput
         - END - the `inputs` MUST be a legInput
        $ref: "TOMP-API-1-CORE.yaml#/components/requestBodies/processRequestBody"
      responses:
        "200":
          $ref: "TOMP-API-1-CORE.yaml#/components/responses/packageResponse"
        "202":
          $ref: "TOMP-API-1-CORE.yaml#/components/responses/packageResponse"
        "503":
          description: In case of temporary malfunctioning, this response can be send (e.g. bluetooth lock jammed). See also https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After
          $ref: "#/components/responses/retryErrorResponse"
        default:
          $ref: "TOMP-API-1-CORE.yaml#/components/responses/errorResponse"

  /processes/{productExecutionOperation}-product/execute:
    post:
      operationId: productExecutionOperation
      summary: "Perform an operation on a product"
      description: This endpoint must be used to alter the state of a LEG, using OPERATION requests.
      parameters:
        - $ref: "TOMP-API-1-CORE.yaml#/components/parameters/acceptLanguage"
        - $ref: "TOMP-API-1-CORE.yaml#/components/parameters/authorization"
        - $ref: "TOMP-API-1-CORE.yaml#/components/parameters/packageId"
        - $ref: "TOMP-API-1-CORE.yaml#/components/parameters/legId"
        - name: productExecutionOperation
          in: query
          description: OPERATION on a specified product
          required: false
          schema:
            $ref: "#/components/schemas/productExecutionOperation"
      security:
        - BearerAuth: []
        - OAuth: []
        - OAuthPKI: []
      tags:
        - execute
      requestBody:
        description: -|
         <h2>Product operations</h2>
         - ACTIVATE - defaultInput required
         - INITIATE - defaultInput required, new leg is added to the package
        $ref: "TOMP-API-1-CORE.yaml#/components/requestBodies/processRequestBody"
      responses:
        "200":
          $ref: "TOMP-API-1-CORE.yaml#/components/responses/packageResponse"
        "202":
          $ref: "TOMP-API-1-CORE.yaml#/components/responses/packageResponse"
        default:
          $ref: "TOMP-API-1-CORE.yaml#/components/responses/errorResponse"

  /processes/{assetOperation}-asset/execute/:
    post:
      operationId: assetExecutionRequest
      parameters:
        - $ref: "TOMP-API-1-CORE.yaml#/components/parameters/acceptLanguage"
        - $ref: "TOMP-API-1-CORE.yaml#/components/parameters/authorization"
        - name: assetOperation
          in: query
          description: OPERATION on a specified asset
          required: false
          schema:
            $ref: "#/components/schemas/assetOperation"
      security:
        - BearerAuth: []
        - OAuth: []
        - OAuthPKI: []
      tags:
        - execute
      requestBody:
        description: -|
          The `input` of the process request body must be of type 'assetInput'
        $ref: "TOMP-API-1-CORE.yaml#/components/requestBodies/processRequestBody"
      responses:
        "200":
          $ref: "TOMP-API-1-CORE.yaml#/components/responses/packageResponse"
        default:
          $ref: "TOMP-API-1-CORE.yaml#/components/responses/errorResponse"

  # Use Pre-sales module for:
  #  /processes/{travellerOperation}-traveller/execute/
  #  /processes/change-times-package/execute/
  #  /processes/change-times-leg/execute/
  #  /processes/{productOperation}-product/execute/
  #  /processes/assign-asset/execute/
  #  /processes/assign-ancillary/execute/

components:
  responses:
    retryErrorResponse:
      description: Bad request. See https://github.com/TOMP-WG/TOMP-API/wiki/Error-handling-in-TOMP for further explanation of error code.
      headers:
        Version:
          $ref: "TOMP-API-1-CORE.yaml#/components/headers/version"
        Content-Language:
          $ref: "TOMP-API-1-CORE.yaml#/components/headers/contentLanguage"
        Retry-After:
          description: A date after which to retry. See the Date header for more details on the HTTP date format.
          schema:
            $ref: "TOMP-API-1-CORE.yaml#/components/schemas/httpDate"
          required: false
      content:
        application/json:
          schema:
            type: object
            properties:
              errors:
                type: array
                maxItems: 10
                items:
                  $ref: "TOMP-API-1-CORE.yaml#/components/schemas/error"

  schemas:
    legOperation:
      type: string
      description: the possible operations on a leg.
      enum:
       - start
       - pause
       - resume
       - end

    productExecutionOperation:
      type: string
      description: possible operations on a product
      enum:
         - activate
         - initiate

    assetOperation:
      type: string
      description: Operations on an asset, the enlisted operations are default, you can extend (outside the TOMP-API).
      # enum:
      #   - lock
      #   - unlock
      #   - open-trunk