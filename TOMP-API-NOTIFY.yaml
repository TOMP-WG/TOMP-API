openapi: 3.0.0
info:
  title: Transport Operator MaaS Provider API - Extension notifications
  description: Notifications extension on the TOMP-API
  version: "1.0.0"
  contact:
    name: TOMP working group
    url: https://github.com/TOMP-WG/TOMP-API
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"

tags:
  - name: notifications
    description: This part of the API facilitates communication from the TO to the MP.

# security. Allowed methods basic (in header: Authorization: Basic ZGVtbzpwQDU1dzByZA==),
#                           bearer (in header: Authorization: Bearer <token>)
#                           Api-key (in header: X-API-Key: abcdef12345)
#                           OAutb and OpenId are also available
# The exact ways to authenticate will be described in a later version
security:
  - BasicAuth: []
  - BearerAuth: []
  - ApiKeyAuth: []
  - OAuth: []
  - OpenId: []

servers:
  - url: https://tomp.dat.nl/tomp/v2

paths:
  /collection/notifications/items:
    post:
      operationId: notification
      summary: "Notification endpoint"
      description: "Notification endpoint. Communication from TO to MP will be done mainly using this endpoint"
      parameters:
        - $ref: "TOMP-API.yaml#/components/parameters/acceptLanguage"
        - $ref: "TOMP-API.yaml#/components/parameters/senderId"
        - $ref: "TOMP-API.yaml#/components/parameters/receiverId"
        - $ref: "TOMP-API.yaml#/components/parameters/packageId"
        - $ref: "TOMP-API.yaml#/components/parameters/legId"
      tags:
        - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/notificationRequest"
      responses:
        "202":
          description: Confirmed
        "204":
          description: Notification processed
        default:
          $ref: "TOMP-API.yaml#/components/responses/errorResponse"

components:
  schemas:
    notificationRequest:
      allOf:
        - $ref: "TOMP-API.yaml#/components/schemas/links"
        - type: object
          required:
            - notificationType
          properties:
            source:
              type: string
              description:
                This operation can be done on behalf of another party. The MP can act on behalf of the CUSTOMER (cancel this package for me); to override the default source.<br>
                In case this field is missing, it must be assumed that the MP is requesting the operations.<br>
                _TO_ the TO requests this operation<br>
                _MP_ the MP (not triggered by the travellers NOR customer)<br>
                _TRAVELLER_ the TRAVELLER triggered this request<br>
                _CUSTOMER_ the CUSTOMER triggered this request. In case the traveller and customer are the same, take _CUSTOMER_.<br>
                _OTHER_ unknown source
              enum: [TO, MP, TRAVELLER, CUSTOMER, DRIVER, OTHER]
            notificationType:
              type: string
              description: <br>
                * _MESSAGE_TO_DRIVER_ [MP->TO] text messages to the driver, provided by the MP or traveler(s). Text is in **comment**  <br>

                * _USER_ACTION_ [TO->NP] Request to show the links to the end user<br>
                * _USER_NO_SHOW_ [TO->MP, OnDemand/taxi] the traveler didn't show up on the departure location & time  <br>
                * _ETA_ [TO->MP, OnDemand/taxi] Estimated time of arrival at the departure location [others] at the destination location. User friendly message is in **comment**  <br>
                * _MESSAGE_TO_END_USER_ [TO->MP] text message to show to the traveler(s). Text is in **comment**  <br>
                * _USER_OUT_OF_LIMITS_ [TO->MP] indication to signal to the driver/traveler(s) they are (about to get) out of limits. Text is in **comment**  <br>
                * _OTHER_ [TO->MP] unspecified. Text is in **comment**  <br>
                * _LOCKED_ [TO->MP] asset is locked  <br>
                * _UNLOCKED_ [TO->MP] asset is unlocked  <br><br>

                * _PROGRESS_ [TO->MP] report progress <br><br>

                * _CONFIRM_REPLACE_ASSET_ Asks confirmation to replace the ASSET, returns a 202 when confirmed, otherwise it will return 400<br>
                * _CONFIRM_START_LEG_ Asks confirmation to start the LEG, returns a 202 when confirmed, otherwise it will return 400<br>

                TO CONTROLLED (Process Identifier)<br>
                * _PREPARING_ [TO->MP] the leg is in preparation  <br>
                * _IN_USE_ [TO->MP] leg has started  <br>
                * _PAUSED_ [TO->MP] leg is paused  <br>
                * _RESUMED_ [TO->MP] leg is resumed  <br>
                * _FINISHING_ [TO->MP] leg is in finishing state  <br>
                * _FINISHED_ [TO->MP] leg has ended
              enum:
                [
                  USER_NO_SHOW,
                  ETA,
                  MESSAGE_TO_DRIVER,
                  MESSAGE_TO_END_USER,
                  USER_OUT_OF_LIMITS,
                  OTHER,
                  LOCKED,
                  UNLOCKED,
                  PROGRESS,
                  CONFIRM_REPLACE_ASSET,
                  CONFIRM_START_LEG,
                  PREPARING,
                  IN_USE,
                  PAUSED,
                  RESUMED,
                  FINISHING,
                  FINISHED,
                ]
              example: USER_NO_SHOW
            location:
              $ref: "TOMP-API.yaml#/components/schemas/externalReference"
            asset:
              $ref: "TOMP-API.yaml#/components/schemas/externalReference"
            assetType:
              $ref: "TOMP-API.yaml#/components/schemas/externalReference"
            assetState:
              $ref: "TOMP-API.yaml#/components/schemas/assetState"
            distance:
              $ref: "TOMP-API.yaml#/components/schemas/float"
              description: the travelled distance, in km. Only if applicable.
            distanceUnits:
              type: string
              enum: [KM, MILE]
            duration:
              $ref: "TOMP-API.yaml#/components/schemas/longInt"
              description: the time in seconds that the assed is used. Only if applicable.
      example:
        {
          "type": "NOTIFY",
          "timestamp": "2019-10-12T07:20:50.52Z",
          "notificationType": "ETA",
          "location": { "type": "GPS", "lng": 6.169639, "lat": 52.253279 },
        }

