@startuml Postponed commit
title Planning Scenario 'postponed commit' - V1.0.0
participant MP
participant TO

autoactivate on

note over TO
**ProcessIdentifiers**: POSTPONED_COMMIT and ACCESS_CODE_BY_TO.
Add one of these to specify the moment of supplying the 
access code (if applicable):
 ACCESS_CODE_IN_PREPARE_EVENT (trip exec module).

One of these access code moments must be accompanied
by ACCESS_CODE_QR, ACCESS_CODE_PDF, ACCESS_CODE_TOKEN, 
ACCESS_CODE_LINK, ACCESS_CODE_TICKETSTOCK.
end note

MP -> TO : POST /booking/ \n**This scenario is only**\n**allowed with process identifier POSTPONED_COMMIT**\nAnd is not allowed to combine with \nATOMIC_PLANNING_AND_BOOKING or ATOMIC_BOOKING_UNLOCKING
note over TO
The TO recalls the persisted leg in 
the offer by taking the ID from the body 
of this request. The TO reservates the 
asset from the planning __OR__ reserves and 
assignes an asset to the leg __OR__ postpones
this assignment until the execution module.
end note
return booking in PENDING state

note over MP
The MP has to book all the legs of the trip.
If all reply with a booking in PENDING state,
he can continue COMMITting the bookings
end note

MP -> TO: POST /booking/{id}/events { "operation": "COMMIT" }
return booking in CONDITIONAL_CONFIRMED state

...
alt accepting a leg
TO -> MP: POST /booking/{id}/events { "operation": "COMMIT" }
return ok
note over MP
process of booking is finished, 
just as the default process
end note
== trip execution ==
else denying a leg
TO -> MP: POST /booking/{id}/events { "operation": "DENY" }
return ok
note over MP
process of booking an alternative 
for this leg should be started, 
the end user should be informed.
end note
end 
@enduml
