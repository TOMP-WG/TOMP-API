openapi: 3.0.0
info:
  title: Transport Operator MaaS Provider API - Discovery Extension
  description: Supplying meta information complying to the OGC Core standard
  version: "1.0.0"
  contact:
    name: TOMP working group
    url: https://github.com/TOMP-WG/TOMP-API
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"

tags:
  - name: capabilities
    description: This part of the API delivers a technical and human readable interface, allowing to read how this API should be used. Complies to OGC standard (OGC Features Core)
      (https://ogcapi.ogc.org/features/) and Data spaces working as iShare satellite (https://dev.ishare.eu/ishare-satellite-role/)

# security. Allowed methods basic (in header: Authorization: Basic ZGVtbzpwQDU1dzByZA==),
#                           bearer (in header: Authorization: Bearer <token>)
#                           Api-key (in header: X-API-Key: abcdef12345)
#                           OAutb and OpenId are also available
# The exact ways to authenticate will be described in a later version
security:
  - BasicAuth: []
  - BearerAuth: []
  - ApiKeyAuth: []
  - OAuth: []
  - OpenId: []

servers:
  - url: https://tomp.dat.nl/tomp/v2

paths:
  /api:
    get:
      description: This document
      parameters:
        - $ref: '#/components/parameters/f'
      responses:
        '200':
          description: General Success response.
        default:
          $ref: "TOMP-API.yaml#/components/responses/errorResponse"
      summary: This document
      tags:
        - server

  /collections:
    get:
      tags:
        - capabilities
      summary: the feature collections in the dataset
      description: returns a collection of available collection (like offers, packages, legs, support-requests and payments)
      operationId: getCollections
      responses:
        "200":
          description: A list of available collections
          headers:
            Content-Language:
              $ref: "TOMP-API.yaml#/components/headers/contentLanguage"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/collections"
        default:
          $ref: "TOMP-API.yaml#/components/responses/errorResponse"

  /collections/{collectionId}:
    get:
      tags:
        - capabilities
      summary: |-
        describe the feature collection with id `collectionId`
      operationId: describeCollection
      description: a (machine or human) readable description of this collection
      parameters:
        - $ref: "#/components/parameters/collectionId"
      responses:
        "200":
          description: description of data delivered by this collection
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/collection"
            text/html:
              schema:
                type: string
        default:
          $ref: "TOMP-API.yaml#/components/responses/errorResponse"

  /conformance:
    summary: endpoint showing the standards this endpoint uses (conforms to)
    get:
      tags:
        - capabilities
      operationId: getConformance
      description: returns a list of implemented endpoints
      responses:
        "200":
          description: a list of standards
          headers:
            Content-Language:
              $ref: "TOMP-API.yaml#/components/headers/contentLanguage"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/conformance"
        default:
          $ref: "TOMP-API.yaml#/components/responses/errorResponse"

components:
  parameters:
    f:
      description: >-
        The optional f parameter indicates the output format that the server
        shall provide as part of the response document.  The default format is
        JSON.
      explode: false
      in: query
      name: f
      required: false
      schema:
        default: json
        enum:
          - json
          - html
        type: string
      style: form  

    collectionId:
      name: collectionId
      in: path
      description: local identifier of a collection
      required: true
      schema:
        type: string
        enum:
          [
            "offers",
            "packages",
            "legs",
            "support-tickets",
            "payments",
          ]

  schemas:
    conformance:
      type: object
      required:
        - conformsTo
      properties:
        conformsTo:
          type: array
          items:
            type: string
            example: "http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/core"
      example:
        {
          "conformsTo":
            [
              "http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/core",
              "http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/oas30",
              "http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/html",
              "http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/geojson",
              "https://www.rfc-editor.org/info/rfc8288"
            ],
        }

    collection:
      type: object
      required:
        - id
        - links
      properties:
        id:
          description: identifier of the collection used, for example, in URIs
          type: string
          example: address
        title:
          description: human readable title of the collection
          type: string
          example: address
        description:
          description: a description of the features in the collection
          type: string
          example: An address.
        links:
          type: array
          items:
            $ref: "TOMP-API.yaml#/components/schemas/link"
          example:
            - href: http://data.example.com/buildings
              rel: item
            - href: http://example.com/concepts/buildings.html
              rel: describedby
              type: text/html
        extent:
          $ref: "#/components/schemas/extent"
        crs:
          description: the list of coordinate reference systems supported by the service
          type: array
          items:
            type: string
          default:
            - http://www.opengis.net/def/crs/OGC/1.3/CRS84
          example:
            - http://www.opengis.net/def/crs/OGC/1.3/CRS84
            - http://www.opengis.net/def/crs/EPSG/0/4326

    extent:
      type: object
      description: |-
        The extent of the features in the collection. In the Core only spatial and temporal
        extents are specified. Extensions may add additional members to represent other
        extents, for example, thermal or pressure ranges.
      properties:
        spatial:
          description: |-
            The spatial extent of the features in the collection.
          type: object
          properties:
            bbox:
              description: |-
                One or more bounding boxes that describe the spatial extent of the dataset.
                In the Core only a single bounding box is supported. Extensions may support
                additional areas. If multiple areas are provided, the union of the bounding
                boxes describes the spatial extent.
              type: array
              minItems: 1
              items:
                description: |-
                  Each bounding box is provided as four or six numbers, depending on
                  whether the coordinate reference system includes a vertical axis
                  (height or depth):

                  * Lower left corner, coordinate axis 1
                  * Lower left corner, coordinate axis 2
                  * Minimum value, coordinate axis 3 (optional)
                  * Upper right corner, coordinate axis 1
                  * Upper right corner, coordinate axis 2
                  * Maximum value, coordinate axis 3 (optional)

                  The coordinate reference system of the values is WGS 84 longitude/latitude
                  (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate
                  reference system is specified in `crs`.

                  For WGS 84 longitude/latitude the values are in most cases the sequence of
                  minimum longitude, minimum latitude, maximum longitude and maximum latitude.
                  However, in cases where the box spans the antimeridian the first value
                  (west-most box edge) is larger than the third value (east-most box edge).

                  If the vertical axis is included, the third and the sixth number are
                  the bottom and the top of the 3-dimensional bounding box.

                  If a feature has multiple spatial geometry properties, it is the decision of the
                  server whether only a single spatial geometry property is used to determine
                  the extent or all relevant geometries.
                type: array
                oneOf:
                  - minItems: 4
                    maxItems: 4
                  - minItems: 6
                    maxItems: 6
                items:
                  type: number
                example:
                  - -180
                  - -90
                  - 180
                  - 90
            crs:
              description: |-
                Coordinate reference system of the coordinates in the spatial extent
                (property `bbox`). The default reference system is WGS 84 longitude/latitude.
                In the Core this is the only supported coordinate reference system.
                Extensions may support additional coordinate reference systems and add
                additional enum values.
              type: string
              enum:
                - "http://www.opengis.net/def/crs/OGC/1.3/CRS84"
              default: "http://www.opengis.net/def/crs/OGC/1.3/CRS84"
        temporal:
          description: |-
            The temporal extent of the features in the collection.
          type: object
          properties:
            interval:
              description: |-
                One or more time intervals that describe the temporal extent of the dataset.
                The value `null` is supported and indicates an unbounded interval end.
                In the Core only a single time interval is supported. Extensions may support
                multiple intervals. If multiple intervals are provided, the union of the
                intervals describes the temporal extent.
              type: array
              minItems: 1
              items:
                description: |-
                  Begin and end times of the time interval. The timestamps are in the
                  temporal coordinate reference system specified in `trs`. By default
                  this is the Gregorian calendar.
                type: array
                minItems: 2
                maxItems: 2
                items:
                  type: string
                  format: date-time
                  nullable: true
                example:
                  - "2011-11-11T12:22:11Z"
                  - null
            trs:
              description: |-
                Coordinate reference system of the coordinates in the temporal extent
                (property `interval`). The default reference system is the Gregorian calendar.
                In the Core this is the only supported temporal coordinate reference system.
                Extensions may support additional temporal coordinate reference systems and add
                additional enum values.
              type: string
              enum:
                - "http://www.opengis.net/def/uom/ISO-8601/0/Gregorian"
              default: "http://www.opengis.net/def/uom/ISO-8601/0/Gregorian"

    collections:
      type: object
      required:
        - links
        - collections
      properties:
        links:
          type: array
          items:
            $ref: "TOMP-API.yaml#/components/schemas/link"
        collections:
          type: array
          items:
            $ref: "#/components/schemas/collection"

