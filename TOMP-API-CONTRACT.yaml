openapi: 3.0.0
info:
  title: Transport Operator MaaS Provider API - Contract extension
  description: Extension on the TOMP-API to view & create contracts
  version: "1.0.0"
  contact:
    url: https://github.com/TOMP-WG/TOMP-API
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"

tags:
  - name: contract
    description: contract endpoints, to publish, complete, and sign contracts

paths:
  /collections/contract-profiles/items:
    get:
      parameters:
        - $ref: "TOMP-API.yaml#/components/parameters/acceptLanguage"
        - $ref: "TOMP-API.yaml#/components/parameters/offset"
        - $ref: "TOMP-API.yaml#/components/parameters/limit"
      summary: return all contract profiles
      tags:
        - contract
      responses:
        "200":
          description: the list of profiles
          content:
            application/json:
              schema:
                allOf:
                  - type: array
                    items:
                      $ref: "#/components/schemas/profile"
                  - $ref: "TOMP-API.yaml#/components/schemas/links"
    post:
      description: register a new profile
      requestBody:
        $ref: "#/components/schemas/profile"
      responses:
        "200":
          description: registered profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile"
        "202":
          description: profile to be confirmed (after review)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile"
        default:
          $ref: "TOMP-API.yaml#/components/responses/errorResponse"

  /collections/contract-parts/items/{partId}:
    get:
      parameters:
        - name: partId
          description: the id of this contract part
          in: path
          required: true
          schema:
            type: string
        - name: version
          description: the version of this contract part
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: the list of contract-parts
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contractPart"

  /collections/contract-parts/items:
    get:
      parameters:
        - $ref: "TOMP-API.yaml#/components/parameters/acceptLanguage"
        - $ref: "TOMP-API.yaml#/components/parameters/offset"
        - $ref: "TOMP-API.yaml#/components/parameters/limit"
        - name: profileId
          description: search for contract parts of this profile
          in: query
          required: false
          schema:
            type: string
        - name: version
          description: and of this version, can only be used when profileId is supplied as well.
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: the list of contract-parts
          content:
            application/json:
              schema:
                allOf:
                  - type: array
                    items:
                      $ref: "#/components/schemas/contractPart"
                  - $ref: "TOMP-API.yaml#/components/schemas/links"
    post:
      description: register a contract part
      requestBody:
        $ref: "#/components/schemas/contractPart"
      responses:
        "200":
          description: the list of contract-parts
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contractPart"
        "202":
          description: contract part to be confirmed (after review)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contractPart"
        default:
          $ref: "TOMP-API.yaml#/components/responses/errorResponse"

  /collections/contracts/items/{contractId}:
    get:
      parameters:
        - $ref: "TOMP-API.yaml#/components/parameters/acceptLanguage"
        - $ref: "TOMP-API.yaml#/components/parameters/authorization"
        - name: contractId
          in: path
          description: contract identifier
          required: true
          schema:
            $ref: "TOMP-API.yaml#/components/schemas/uuid"
      tags:
        - contract
      description: a specific, signed contract
      responses:
        "200":
          description: a specific, signed contract (only when you're authorized to retrieve it)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contract"
                  
  /collections/contracts/items/:
    get:
      summary: request a contract compliant with a specified profile
      parameters:
        - name: profileId
          in: query
          schema:
            type: string
        - name: contract
          in: query
          schema:
            $ref: "#/components/schemas/contractBody"
      responses:
        "200":
          description: a signable contract
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contract"
    post:
      summary: "A request to sign a completed contract"
      parameters:
        - $ref: "TOMP-API.yaml#/components/parameters/acceptLanguage"
        - $ref: "TOMP-API.yaml#/components/parameters/authorization"
        - $ref: "TOMP-API.yaml#/components/parameters/receiverId"
      tags:
        - contract
      requestBody:
        description: the contract to sign, including all parameters.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/contract"
      responses:
        "200":
          description: signed contract 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contract"
        "202":
          description: the contract has to be reviewed before a signed contract is posted at the callback url
          content:
            text/html:
              schema:
                type: string
        default:
          $ref: "TOMP-API.yaml#/components/responses/errorResponse"

components:
  schemas:
    contract:
      type: object
      required:
      - id
      - body
      - pattern
      properties:
        id:
          type: string
        contractBody:
          $ref: "#/components/schemas/contractBody"
        hash:
          description: the hash value of the body, starting at the begin brace of the body (included).
            and ending at the end brace (also included).
          type: string
        hashMethod:
          description: the method to hash
          type: string
          enum: ["MD5", "SHA1", "AES"]
        signatures:
          type: array
          items:
            $ref: "#/components/schemas/contractSignature"
        publicUrl:
          type: string
      example:
        - {"contractBody": 
                   { "contractor1": {"id": "me", "publicKey": "33"},
                     "contractor2": {"id": "you", "publicKey": "77"},
                     "parameters":  { "part1:1.0:place": "Amsterdam" } 
                   },
           "hash": "0eaca9862e33d4038cc6174527e4bf89", # to prove the body hasn't changed, can be validated
           "hashMethod": "MD5",
           "signatures": [ { "id": "me", "signature": "54hehkewrsdzyfvy34" }, # signed hash using the private key of contractor 1
                           { "id": "you", "signature": "835thgevifjdzhr4" } # signed hash using the private key of contractor 2
                         ]
          }

    profile:
      type: object
      description: the profile of a contract, describing what's the structure, and what's allowed or mandatory. This part is not
        mandatory, but gives external standard contracts a helpful structure to formalize.
      properties:
        id:
          type: string
        parts:
          type: array
          items:
            $ref: "#/components/schemas/contractPart"
        pattern:
          type: string
          description: a regex-kind of pattern, describing the possible structures.
            It is a list of part-identifiers (e.g. 'x', space seperated), followed by a * (= 0-n times) or a + (= 1-n times)
            It is allowed to make optional parts, using the |, so 'x'|'y' means x OR y. Grouping of parts is done with normal brackets ()
            To make it an exclusive XOR, use the 'illegalCombination' arrays.
          example:
            - "'OpenWheels:A1' ('OpenWheels:2A'|'OpenWheels:2B'|'OpenWheels:2C') 'OpenWheels:3'+ 'OpenWheels:4'*"
      example:
      - {
          "id": "OpenWheels:V2"
        , "parts": [ 
            {"id": "OpenWheels:V1:1"},
            {"id": "OpenWheels:V1:2A", "illegalCombinations": ["OpenWheels:V2:2B", "OpenWheels:2C"] },
            {"id": "OpenWheels:V1:2B", "illegalCombinations": ["OpenWheels:2A", "OpenWheels:2C"] },
            {"id": "OpenWheels:V1:2C", "illegalCombinations": ["OpenWheels:2A", "OpenWheels:2B"] },
            {"id": "OpenWheels:V2:3" },
            {"id": "OpenWheels:V1:4", "mandatoryParts": [ "OpenWheels:2B" ] },
            ]
        , "pattern": "'OpenWheels:A1' ('OpenWheels:2A'|'OpenWheels:2B'|'OpenWheels:2C') 'OpenWheels:3'+ 'OpenWheels:4'*"
        }

    contractPart:
      type: object
      required: 
      - id
      properties:
        id:
          type: string
        version:
          type: string
        reference: 
          type: string
          $ref: "TOMP-API.yaml#/components/schemas/externalReference"
        referenceHash:
          type: string
          description: the hash (MD5) of the text of the referenced contract part
        text:
          type: string
          description: the contract part, in case there is no referenced contract
        parameters:
          type: array
          items:
            $ref: "#/components/schemas/contractParameter"
        illegalCombinations:
          type: array
          items:
            type: string
        mandatoryParts:
          type: array
          items:
            type: string

    contractParameter:
      type: object
      required:
        - name
      properties:
        definition:
          $ref: "TOMP-API.yaml#/components/schemas/externalReference"
        description: 
          type: string
        name:
          type: string
        type:
          type: string
          enum: [ string, int, date, double, url, money ]

    contractBody:
      type: object
      required:
        - contractor1
        - parameters
      properties:
        contractor1:
          $ref: "#/components/schemas/contractor"
        contractor2:
          $ref: "#/components/schemas/contractor"
          additionalProperties: 
            $ref: "#/components/schemas/contractor"
        parameters:
          type: object
          description: each of the named values must be in this object, prefixed with the id & version of the part
          additionalProperties: 
            type: string
        profile:
          $ref: "#/components/schemas/profile"
        externalReference:
          $ref: "TOMP-API.yaml#/components/schemas/url"
      example:
      - { "contractor1": { "name": "My First MP", "publicKey": "4323ADG-234"}
        , "parameters": { "name": "My First MP", "signing date": "2024-04-22", "valid until": "2024-06-01" }
        }

    contractor:
      type: object
      required:
        - name
        - publicKey
      properties:
        id:
          type: string
        name:
          type: string
        publicKey:
          type: string

    contractSignature:
      type: object
      description: per contractor the id and the signed hash is enlisted
      required:
        - contractorId
        - contractor2
      properties:
        contractorId: 
          type: string
        contractorSignature:
          type: string
      additionalProperties: 
        type: string        