openapi: 3.0.0
info:
  title: Transport Operator MaaS Provider API
  description: "<h2>Context</h2>
    <p>This API allows technical communication between Transport Operators (TO) and MaaS providers (MP, and other resellers), to fulfill a complete MaaS user journey<br>
    For more information: <a href='https://github.com/TOMP-WG/TOMP-API/wiki/OpenAPI-entry-page'>TOMP-API wiki</a>, and <a href='https://github.com/TOMP-WG/TOMP-API/wiki/OpenAPI-code-convention'>Coding conventions</a>"
  version: "2.0.0"
  contact:
    name: TOMP working group
    url: https://github.com/TOMP-WG/TOMP-API
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"

tags:
  - name: modify offer
    description: Extension to modify offers.

paths:
  /collections/offers/items/{packageId}:
    get:
      summary: retrieve the pre-purchased package as registered
      parameters:
        - $ref: "TOMP-API.yaml#/components/parameters/acceptLanguage"
        - $ref: "TOMP-API.yaml#/components/parameters/authorization"
        - $ref: "TOMP-API.yaml#/components/parameters/receiverId"
        - $ref: "TOMP-API.yaml#/components/parameters/packageId"
      tags:
        - modify offer
      responses:
        "200":
          $ref: "TOMP-API.yaml#/components/responses/packageResponse"
        default:
          $ref: "TOMP-API.yaml#/components/responses/errorResponse"
    post:
      operationId: prePurchaseOperation
      summary: "Perform an operation on an pre-purchased package (or to obtain one)"
      description: -|
        PRE_PURCHASE - select an offer to allow operations (modify) on it.
        CUSTOMER - modify the customer of the package<br>
        TRAVELLER - add, modify or remove a traveller to this package<br>
        PRODUCT - add, modify or remove a product to the package<br>
        RELEASE - release the current offered package<br>
        EXTEND_EXPIRY_TIME - request additional time<br>
      parameters:
        - $ref: "TOMP-API.yaml#/components/parameters/acceptLanguage"
        - $ref: "TOMP-API.yaml#/components/parameters/authorization"
        - $ref: "TOMP-API.yaml#/components/parameters/receiverId"
        - $ref: "TOMP-API.yaml#/components/parameters/packageId"
        - $ref: "#/components/parameters/prePurchasedPackageOperation"
      tags:
        - modify offer
      requestBody:
        $ref: "#/components/requestBodies/prePurchasedPackageOperationRequest"
      responses:
        "200":
          $ref: "TOMP-API.yaml#/components/responses/packageResponse"
        default:
          $ref: "TOMP-API.yaml#/components/responses/errorResponse"

  /collections/offered-legs/items:
    post:
      operationId: prepurchasedLegOperation
      summary: "Perform an operation on a leg in an pre-purchased package"
      description: This endpoint must be used to adjust the pre-purchased LEG, using OPERATION requests.
      parameters:
        - $ref: "TOMP-API.yaml#/components/parameters/acceptLanguage"
        - $ref: "TOMP-API.yaml#/components/parameters/authorization"
        - $ref: "TOMP-API.yaml#/components/parameters/receiverId"
        - $ref: "TOMP-API.yaml#/components/parameters/packageId"
        - $ref: "TOMP-API.yaml#/components/parameters/packageElementId"
        - name: operation
          in: query
          description: OPERATION on a specified offered leg
          required: true
          schema:
            $ref: "#/components/schemas/offeredLegOperation"
      tags:
        - modify offer
      requestBody:
        $ref: "#/components/requestBodies/offeredLegOperationRequest"
      responses:
        "200":
          $ref: "TOMP-API.yaml#/components/responses/packageElementResponse"
        default:
          $ref: "TOMP-API.yaml#/components/responses/errorResponse"

  /collections/offered-products/items:
    post:
      operationId: offeredProductOperation
      summary: "Perform an operation on a product in an pre-purchased package"
      description: This endpoint must be used to adjust a FARE PRODUCT, using OPERATION requests.
      parameters:
        - $ref: "TOMP-API.yaml#/components/parameters/acceptLanguage"
        - $ref: "TOMP-API.yaml#/components/parameters/authorization"
        - $ref: "TOMP-API.yaml#/components/parameters/receiverId"
        - $ref: "TOMP-API.yaml#/components/parameters/packageId"
        - $ref: "TOMP-API.yaml#/components/parameters/packageElementId"
        - name: operation
          in: query
          description: OPERATION on a product in an offered package
          required: true
          schema:
            $ref: "#/components/schemas/offeredProductOperation"
      tags:
        - modify offer
      requestBody:
        $ref: "#/components/requestBodies/offeredProductOperationRequest"
      responses:
        "200":
          $ref: "TOMP-API.yaml#/components/responses/packageElementResponse"
        default:
          $ref: "TOMP-API.yaml#/components/responses/errorResponse"

components:
  requestBodies:
    prePurchasedPackageOperationRequest:
      content:
        application/json:
          schema:
            discriminator:
              propertyName: type
              # PRE_PURCHASE, RELEASE, EXTEND_EXPIRY_TIME, CUSTOMER, TRAVELLER, PRODUCT
              mapping:
                PRE_PURCHASE: "#/components/schemas/prePurchasedPackageOperationRequest"
                RELEASE: "#/components/schemas/prePurchasedPackageOperationRequest"
                EXTEND_EXPIRY_TIME: "TOMP-API.yaml#/components/schemas/extendExpiryTimeRequest"
                CUSTOMER: "#/components/schemas/customerRequest"
                TRAVELLER: "TOMP-API.yaml#/components/schemas/travellerRequest"
                PRODUCT: "TOMP-API.yaml#/components/schemas/packageElementRequest"
            oneOf:
            - $ref: "#/components/schemas/prePurchasedPackageOperationRequest"
            - $ref: "TOMP-API.yaml#/components/schemas/extendExpiryTimeRequest"
            - $ref: "#/components/schemas/customerRequest"
            - $ref: "TOMP-API.yaml#/components/schemas/travellerRequest"
            - $ref: "TOMP-API.yaml#/components/schemas/packageElementRequest"

    offeredLegOperationRequest:
      content:
        application/json:
          schema:
            discriminator:
              propertyName: type
              # REMOVE, ASSIGN_ASSET, CHANGE_TIME, ANCILLARY
              mapping:
                REMOVE: "TOMP-API.yaml#/components/schemas/legOperationRequest"
                ASSIGN_ASSET: "TOMP-API.yaml#/components/schemas/assetRequest"
                CHANGE_TIME: "TOMP-API.yaml#/components/schemas/timeRequest"
                ANCILLARY: "TOMP-API.yaml#/components/schemas/ancillaryRequest"
                CUSTOM: "TOMP-API.yaml#/components/schemas/legOperationRequest"
            oneOf:
              - $ref: "TOMP-API.yaml#/components/schemas/legOperationRequest"
              - $ref: "TOMP-API.yaml#/components/schemas/assetRequest"
              - $ref: "TOMP-API.yaml#/components/schemas/timeRequest"
              - $ref: "TOMP-API.yaml#/components/schemas/ancillaryRequest"
            properties:
              type:
                $ref: "#/components/schemas/offeredLegOperation"

    offeredProductOperationRequest:
      content:
        application/json:
          schema:
            type: object
            required:
            - type
            - timestamp
            properties:
              type:
                type: string
              parameters:
                type: array
                items:
                  $ref: "TOMP-API.yaml#/components/schemas/parameter"
              timestamp:
                $ref: "TOMP-API.yaml#/components/schemas/dateTime"

  schemas:
    prePurchasedPackageOperationRequest:
      type: object
      description: operation request for the (pre-)purchase, trip execution or after sales phase
      additionalProperties: false
      required:
        - timestamp
        - type
      properties:
        type:
          $ref: "#/components/schemas/prePurchasedPackageOperation"
          description: the 'operation' in the url must match with the type of the prePurchasedPackageOperationRequest
        timestamp:
          $ref: "TOMP-API.yaml#/components/schemas/dateTime"
        comment:
          $ref: "TOMP-API.yaml#/components/schemas/longString"
          description: free text, should match Content-Language.

    offeredLegOperationRequest:
      type: object
      required:
      - type
      - timestamp
      properties:
        type:
          type: string
        timestamp:
          $ref: "TOMP-API.yaml#/components/schemas/dateTime"

    prePurchasedPackageOperation:
      type: string
      externalDocs:
        url: https://www.transmodel-cen.eu/model/EARoot/EA7/EA3/EA1/EA3040.htm
        description: TYPE OF REQUEST (unspecified)
      description:
        _PRE_PURCHASE_ select an offer to modify<br>
        _EXTEND_EXPIRY_TIME_ request additional time to complete the offer<br>
        _TRAVELLER_ request to add/modify/remove a traveller
        _CUSTOMER_ request to modify the customer
        _PRODUCT_ request to add/modify/remove a product to an offered package
        _RELEASE_ request to release the package
      enum:
        [ PRE_PURCHASE,
          EXTEND_EXPIRY_TIME,
          CUSTOMER,
          TRAVELLER,
          PRODUCT,
          RELEASE ]          

    offeredLegOperation:
      type: string
      externalDocs:
        url: https://www.transmodel-cen.eu/model/EARoot/EA4/EA2/EA4/EA1162.htm
        description: TYPE OF EVENT
      description: -|
        The list below contains all formalized operations. Other operations are allowed as well, but have one restriction - the external status of the leg cannot not be changed.<br>
        This allows for instance to introduce a 'OPEN_TRUNK' operation. The links collection can be altered depending on the operations that have been performed.<br>
        Communication from TO towards MP is handled in the 'notify' extension.<br>

        Operations:<br>
        _ASSIGN_ASSET_ can assign an ASSET to a LEG. Can be used to replace an ASSET, or as first step in the trip execution process [ONBOARDING STEP]<br>

        If assigning an ASSET is not allowed for this package 403 should be returned. If the package is unknown, 404 should be returned.<br>
        _CHANGE_TIMES_ will be used to request a changed end or start time<br>
        _REMOVE_ Will remove this LEG. Only allowed when multiple LEGs are included in the package, otherwise the complete package should be cancelled<br>

        _ANCILLARIES_ requests to add or remove the specified ANCILLARY to the LEG<br>
      enum: [ REMOVE,
              ASSIGN_ASSET,
              CHANGE_TIME,
              ANCILLARIES,
              CUSTOM ]

    offeredProductOperation:
      type: string
      description: -|
          REMOVE - to remove this product (package element), optionally to reimburse
          ADD_PARAMETER - to add parameters
          REMOVE_PARAMETER - to remove enlisted parameters
          SPLIT_COMBINED_PRODUCT - to split a combined product in several products
          CUSTOM - custom operations
      enum: [ REMOVE
            , ADD_PARAMETER
            , REMOVE_PARAMETER
            , SPLIT_COMBINED_PRODUCT
            , CUSTOM ]

    customerRequest:
      description: update the customer with the supplied information
      allOf:
        - $ref: "#/components/schemas/prePurchasedPackageOperationRequest"
        - type: object
          required:
            - customer
          properties:
            customer:
              $ref: "TOMP-API.yaml#/components/schemas/customer"
      example:
        {
          "type": "CUSTOMER",
          "timestamp": "2019-10-12T07:20:50.52Z",
          "requestOffers": false,
          "customer":
            { "id": "ABT:3942349-DFRK", "email": "j.doe@newmail.com" },
        }

  parameters:
    prePurchasedPackageOperation:
      name: operation
      in: query
      description: OPERATION to execute
      required: true
      schema:
        $ref: "#/components/schemas/prePurchasedPackageOperation"