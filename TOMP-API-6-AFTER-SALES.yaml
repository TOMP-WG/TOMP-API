openapi: 3.0.0
info:
  title: Transport Operator MaaS Provider API - Payment extension
  description: Extension of the TOMP-API for payment information
  version: "1.0.0"
  contact:
    name: TOMP working group
    url: https://github.com/TOMP-WG/TOMP-API
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"

tags:
  - name: after sales
    description: This part of the API describes how the financial settlement should be done. All kinds of fares, fees, debits, and credits are described.

paths:
  /collections/payments/items:
    get:
      operationId: getPaymentOverview
      summary: "Retrieve financial details"
      description: Returns all the JOURNAL ENTRIES that should be paid (per LEG)
      parameters:
        - $ref: "TOMP-API-1-CORE.yaml#/components/parameters/acceptLanguage"
        - $ref: "TOMP-API-1-CORE.yaml#/components/parameters/authorization"
        - $ref: "TOMP-API-1-CORE.yaml#/components/parameters/receiverId"
        - $ref: "TOMP-API-1-CORE.yaml#/components/parameters/limit"
        - $ref: "TOMP-API-1-CORE.yaml#/components/parameters/offset"
        - $ref: "TOMP-API-1-CORE.yaml#/components/parameters/bbox"
        - name: startTime
          in: query
          description: start of the selection
          required: false
          schema:
            $ref: "TOMP-API-1-CORE.yaml#/components/schemas/dateTime"
        - name: endTime
          in: query
          description: end of the selection
          required: false
          schema:
            $ref: "TOMP-API-1-CORE.yaml#/components/schemas/dateTime"
        - name: invoiceState
          in: query
          required: false
          schema:
            $ref: "#/components/schemas/paymentState"
        - name: packageId
          in: query
          required: false
          schema:
            $ref: "TOMP-API-1-CORE.yaml#/components/schemas/uuid"
        - name: category
          in: query
          description: type of PAYMENT DETAIL (e.g. fare, addition costs, fines, ...)
          required: false
          schema:
            $ref: "#/components/schemas/paymentCategory"
      tags:
        - after sales
      responses:
        "200":
          description: journal entries
          headers:
            Content-Language:
              $ref: "TOMP-API-1-CORE.yaml#/components/headers/contentLanguage"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/paymentResponse"
        default:
          $ref: "TOMP-API-1-CORE.yaml#/components/responses/errorResponse"

  /collections/redresses/items:
    get:
      operationId: getRedresses
      summary: "Retrieve redresses for a guarantee"
      description: Returns possible redresses for a guarantee
      parameters:
        - $ref: "TOMP-API-1-CORE.yaml#/components/parameters/acceptLanguage"
        - $ref: "TOMP-API-1-CORE.yaml#/components/parameters/authorization"
        - $ref: "TOMP-API-1-CORE.yaml#/components/parameters/receiverId"
        - $ref: "TOMP-API-1-CORE.yaml#/components/parameters/limit"
        - $ref: "TOMP-API-1-CORE.yaml#/components/parameters/offset"
        - $ref: "TOMP-API-1-CORE.yaml#/components/parameters/bbox"
        - name: packageId
          in: query
          description: the id of the package that contains a purchased product
          required: true
          schema:
            $ref: "TOMP-API-1-CORE.yaml#/components/schemas/uuid"
        - name: productId
          in: query
          description: the guaranteed product
          required: true
          schema:
            $ref: "TOMP-API-1-CORE.yaml#/components/schemas/externalReference"
        - name: guaranteeId
          in: query
          description: the guarantee that haven't been met
          required: true
          schema:
            $ref: "TOMP-API-1-CORE.yaml#/components/schemas/uuid"
      tags:
        - after sales
      responses:
        "200":
          description: each feature MUST be of the type redressOption
          $ref: "#/components/responses/redressesResponse"
        default:
          $ref: "TOMP-API-1-CORE.yaml#/components/responses/errorResponse"

  /processes/cancel-package/execute:
    post:
      operationId: cancelPackageOperation
      summary: "(Partial) cancel a package, after purchase. Before purchase you release a package."
      description: 
        _CANCEL_ - cancel this package<br>
      parameters:
        - $ref: "TOMP-API-1-CORE.yaml#/components/parameters/acceptLanguage"
        - $ref: "TOMP-API-1-CORE.yaml#/components/parameters/authorization"
        - $ref: "TOMP-API-1-CORE.yaml#/components/parameters/receiverId"
      tags:
        - after sales
      requestBody:
        description: input = packageInput
        $ref: "TOMP-API-1-CORE.yaml#/components/requestBodies/processRequestBody"
      responses:
        "200":
          $ref: "TOMP-API-1-CORE.yaml#/components/responses/packageResponse"
        "202":
          description: when the processing has been completed, the notification URL will be used 
        default:
          $ref: "TOMP-API-1-CORE.yaml#/components/responses/errorResponse"

  /processes/cancel-leg/execute:
    post:
      operationId: cancelLegOperation
      summary: "(Partial) cancel a leg, after purchase."
      description: 
        _CANCEL_ - cancel this leg<br>
      parameters:
        - $ref: "TOMP-API-1-CORE.yaml#/components/parameters/acceptLanguage"
        - $ref: "TOMP-API-1-CORE.yaml#/components/parameters/authorization"
        - $ref: "TOMP-API-1-CORE.yaml#/components/parameters/receiverId"
      tags:
        - after sales
      requestBody:
        description: input = legInput
        $ref: "TOMP-API-1-CORE.yaml#/components/requestBodies/processRequestBody"
      responses:
        "200":
          $ref: "TOMP-API-1-CORE.yaml#/components/responses/packageResponse"
        "202":
          description: when the processing has been completed, the notification URL will be used 
        default:
          $ref: "TOMP-API-1-CORE.yaml#/components/responses/errorResponse"
          
  /processes/claim-redress/execute:
    post:
      operationId: claimRedressRequest
      description: claimed redresses CAN create additional payment-items (of types REFUND, REBATE)
      tags:
        - after sales
      parameters:
        - $ref: "TOMP-API-1-CORE.yaml#/components/parameters/acceptLanguage"
        - $ref: "TOMP-API-1-CORE.yaml#/components/parameters/authorization"
        - $ref: "TOMP-API-1-CORE.yaml#/components/parameters/receiverId"
        - $ref: "TOMP-API-1-CORE.yaml#/components/headers/digest"
        - $ref: "TOMP-API-1-CORE.yaml#/components/headers/publicKey"
        - $ref: "TOMP-API-1-CORE.yaml#/components/headers/signedDigest"
      requestBody:
        description: the input must be of the type redressInput, the redress options are obtained from /collections/redresses/items
        $ref: "TOMP-API-1-CORE.yaml#/components/requestBodies/processRequestBody"
      responses:
        "200":
          description: the newly created package is returned.
          $ref: "TOMP-API-1-CORE.yaml#/components/responses/packageResponse"
        "202":
          description: whenever this is returned, URLs in the 'subscriber' will be used to inform about 
            the completion of the redress.
        default:
          $ref: "TOMP-API-1-CORE.yaml#/components/responses/errorResponse"

  /processes/refund-deposit/execute:
    post:
      operationId: refundDepositRequest
      summary: "Request to refund a deposit"
      parameters:
        - $ref: "TOMP-API-1-CORE.yaml#/components/parameters/acceptLanguage"
        - $ref: "TOMP-API-1-CORE.yaml#/components/parameters/authorization"
        - $ref: "TOMP-API-1-CORE.yaml#/components/parameters/receiverId"
      tags:
        - after sales
      requestBody:
        description: The 'input' of the process request body must be of type 'financialInput', with category 'REFUND'
        $ref: "TOMP-API-1-CORE.yaml#/components/requestBodies/processRequestBody"        
      responses:
        "204":
          description: the payment is acknowledged
        default:
          $ref: "TOMP-API-1-CORE.yaml#/components/responses/errorResponse"
  
  /processes/confirm-payment/execute:
    post:
      operationId: confirmPaymentEntry
      summary: "Confirm a financial transaction"
      description: The MP (reseller) confirm a payment
      parameters:
        - $ref: "TOMP-API-1-CORE.yaml#/components/parameters/acceptLanguage"
        - $ref: "TOMP-API-1-CORE.yaml#/components/parameters/authorization"
        - $ref: "TOMP-API-1-CORE.yaml#/components/parameters/receiverId"
      tags:
        - after sales
      requestBody:
        description: The 'input' of the process request body must be of type 'financialInput'
        $ref: "TOMP-API-1-CORE.yaml#/components/requestBodies/processRequestBody"
      responses:
        "204":
          description: the payment is acknowledged
        default:
          $ref: "TOMP-API-1-CORE.yaml#/components/responses/errorResponse"

components:
  responses:
    redressesResponse:
      description: a list of redress options
      headers:
        Version:
          $ref: "TOMP-API-1-CORE.yaml#/components/headers/version"
        Content-Language:
          $ref: "TOMP-API-1-CORE.yaml#/components/headers/contentLanguage"
        Expires:
          schema:
            $ref: "TOMP-API-1-CORE.yaml#/components/schemas/httpDate"
          required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/redressesResponseBody"

  schemas:
    redressesResponseBody:
      description: a list of redress options. 
        The main 'properties' field must be of type 'redresses' (#/components/schemas/redressesProperties)
        The 'properties' field of each Feature must be of type 'redress'
      $ref: "TOMP-API-1-CORE.yaml#/components/schemas/geojson"

    financialInput:
      allOf:
      - $ref: "#/components/schemas/financialDetail"
      - type: object
        required:
          - type
        properties: 
          type: 
            type: string
            enum: ["PAYMENT_REQUEST", "PAYMENT_CONFIRMATION"]

    redressInput:
      type: object
      required:
      - type
      - redressOptionId
      properties:
        type:
          type: string
          enum: ["REDRESS"]
        redressOptionId:
          $ref: "TOMP-API-1-CORE.yaml#/components/schemas/uuid"

    redresses:
      type: object
      properties:
        type: 
          type: string
          enum: [REDRESSES]

    redress:
      allOf:
        - $ref: "TOMP-API-1-CORE.yaml#/components/schemas/geojsonFeatureProperties"
        - type: object
          properties:
            redressOptionId:
              $ref: "TOMP-API-1-CORE.yaml#/components/schemas/uuid"
            redress:
              $ref: "TOMP-API-1-CORE.yaml#/components/schemas/redress"
            # alternative -> in the links section
            compensations:
              type: array
              items:
                $ref: "#/components/schemas/financialDetail"

    paymentCategory:
      type: string
      description: The category of the journalled item <br>
        _ALL_ - for filtering purposes only<br>

        <h2>TO initiated payments </h2>
        To request these payments, use the notifications, send a notification containing the payment confirmation.<br>
        _DEPOSIT_ - a deposit, to refund, use _REFUND_<br>
        _DAMAGE_ - extra costs that must be paid by the MP due to damage to the asset or ancillaries<br>
        _LOSS_ - extra costs that must be paid by the MP due to loss of asset or ancillaries<br>
        _STOLEN_ - the asset (and ancillaries) are stolen and should be paid for<br>
        _EXTRA_USAGE_ - the asset is paid for in advance, additional usage must be paid for (can also be a refund when used less! The amount should be negative in that case)<br>
        _FINE_ - a fine that arrived later on<br>
        _OTHER_ASSET_USED_ - additional costs for a replaced asset<br>
        _FARE_ - the normal costs of the purchased and executed leg(s)<br>
        _OTHER_ - unspecified<br>

        _CREDIT_ - generic CREDIT, e.g. for kick-backs <br>
        _VOUCHER_ - part of the fare that is covered by a voucher (no need to pay)<br>
        _REFUND_ - refund of the deposit or upfront paid fare<br>
        _REBATE_ - (partial) rebate of the fare<br>
        _REIMBURSEMENT_ - reimbursement of the fare<br>
      enum:
        [
          ALL,
          DAMAGE,
          LOSS,
          STOLEN,
          EXTRA_USAGE,
          REFUND,
          REBATE,
          REIMBURSEMENT,
          FINE,
          OTHER_ASSET_USED,
          CREDIT,
          VOUCHER,
          DEPOSIT,
          OTHER,
          FARE,
        ]

    financialDetail:
      allOf:
      - $ref: "TOMP-API-1-CORE.yaml#/components/schemas/amountOfMoney"
      - type: object
        additionalProperties: true
        properties:
          id:
            $ref: "TOMP-API-1-CORE.yaml#/components/schemas/uuid"
            description: id of the JOURNAL ENTRY, the LEG id should be used
          category:
            $ref: "#/components/schemas/paymentCategory"

          state:
            $ref: "#/components/schemas/paymentState"
          expirationDate:
            $ref: "TOMP-API-1-CORE.yaml#/components/schemas/dateTime"

          sequenceId:
            $ref: "TOMP-API-1-CORE.yaml#/components/schemas/tinyInt"
            description: sequence id of the JOURNAL ENTRY, in combination with **id** unique from TO perspective.
          invoiceId:
            $ref: "TOMP-API-1-CORE.yaml#/components/schemas/shortString"
            description: the number of the invoice. Should be filled in when invoiced (**state**=_INVOICED_).
          invoiceDate:
            $ref: "TOMP-API-1-CORE.yaml#/components/schemas/dateTime"
          comment:
            $ref: "TOMP-API-1-CORE.yaml#/components/schemas/longString"
          units:
            type: array
            items:
              type: object
              properties:
                unitCategory:  
                  type: string
                  enum: [DISTANCE, DURATION, USAGE, OTHER]
                description:
                  type: string
                unit: 
                  type: string
                  enum: [KM, MILE, HOURS, MINUTES, DAYS, LITER, KILOWATTHOUR, CO2_COMPENSATION, OTHER]
                amount:
                  $ref: "TOMP-API-1-CORE.yaml#/components/schemas/float"

          vatNumber:
            $ref: "TOMP-API-1-CORE.yaml#/components/schemas/shortString"
            description: VAT identification number.
          bankAccount:
            $ref: "#/components/schemas/bankAccount"
            description: this account will be used

    paymentState:
      type: string
      description: the state of the payment detail
      enum: [TO_INVOICE, INVOICING, INVOICED]

    paymentResponse:
      allOf:
        - type: object
          properties:
            data:
              type: array
              maxItems: 500
              items:
                $ref: "#/components/schemas/financialDetail"
        - $ref: "TOMP-API-1-CORE.yaml#/components/schemas/links"
      example:
          {
            "data": [ "..." ],
            "links":
            [
              {
                "rel": "self",
                "method": "GET",
                "href": "/collections/payments/items&offset=100&limit=100",
                "type": "application/hal+json",
              },
              {
                "rel": "next",
                "method": "GET",
                "href": "/collections/payments/items&offset=200&limit=100",
                "type": "application/hal+json",
              },
              {
                "rel": "previous",
                "method": "GET",
                "href": "/payments&limit=100",
                "type": "application/hal+json",
              },
            ]
          }

    bankAccount:
      type: object
      description: bank account
      additionalProperties: false
      required:
        - name
        - number
      properties:
        name:
          $ref: "TOMP-API-1-CORE.yaml#/components/schemas/shortString"
          description: account name
        number:
          $ref: "TOMP-API-1-CORE.yaml#/components/schemas/shortString"
          description: account number
        country:
          $ref: "TOMP-API-1-CORE.yaml#/components/schemas/country"
        bankIdentification:
          $ref: "TOMP-API-1-CORE.yaml#/components/schemas/shortString"
          description: bank identification, like BIC code

  parameters:
    paymentType:
      in: path
      name: paymentType
      required: true
      schema:
        $ref: "#/components/parameters/paymentType"

    optionalPaymentId:
      in: query
      name: paymentId
      description: payment identifier
      required: false
      schema:
        $ref: "TOMP-API-1-CORE.yaml#/components/schemas/uuid"