@startuml
class Booking {
  BookingState state
  Fare pricing
  Object extraData
}
Booking -up-|> BookingRequest
Booking -{ Leg : legs >
class BookingRequest {
 +String id
  Place from
  Place to
}
BookingRequest -left-  "0..1" Customer : customer >
class Customer <<traveler>> {
 +String id
  String travelerReference
  String initials
  String firstName
  String lastName
  String middleName
  String prefix
  String postfix
  Phone[] phones
  String email
  String birthDate
  Address address
  String photo
  Card[] cards
  License[] licenses
}
class Leg {
 +String id
 +Place from
  Place to
  String departureTime
  String arrivalTime
  String travelerReferenceNumbers
 +AssetType assetType
  Integer legSequenceNumber
  Asset asset
  Fare pricing
  Suboperator suboperator
  LegState state
  Duration departureDelay
  Duration arrivalDelay
  Distance distance
  GeojsonLine progressGeometry
}
Leg -right-{ Condition : conditions >
Leg --  "0..1" Token : ticket >
Leg --  "0..1" OneOfAssetAccessData : assetAccessData >
class Condition {
 +String conditionType
 +String id
}
class ConditionDeposit {
}
ConditionDeposit -up-|> Condition
class ConditionPayWhenFinished {
}
ConditionPayWhenFinished -up-|> Condition
class ConditionPostponedCommit {
 +String ultimateResponseTime
}
ConditionPostponedCommit -up-|> Condition
class ConditionRequireBookingData {
 +String requiredFields
}
ConditionRequireBookingData -up-|> Condition
class ConditionReturnArea {
  String stationId
  GeojsonPolygon returnArea
  Coordinates coordinates
  SystemHours[] returnHours
}
ConditionReturnArea -up-|> Condition
class ConditionUpfrontPayment {
}
ConditionUpfrontPayment -up-|> Condition
class Token {
 +String validFrom
 +String validUntil
 +String tokenType
}
Token --  "0..1" OneOfTokenData : tokenData >
Token .up.> OneOfAssetAccessData
interface OneOfAssetAccessData {
}
class TokenArray {
}
TokenArray -{ Token :  >
TokenArray .up.> OneOfAssetAccessData
@enduml
